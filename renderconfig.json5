{
  vars: {
    VAR_tileWidth: {
      type: "int",
      value: 16
    },
    VAR_tileHeight: {
      type: "int",
      value: 16
    },
  },
  // Each entry in "resources" is allocated
  resources: {
    RT_depth: {
      type: "image",
      format: "D32_FLOAT"
    },
    RT_color: {
      type: "image",
      format: "R8G8B8A8_UNORM"
    },
    RT_tileLineCount: {
      type: "image",
      format: "R32_SINT",
      width_div: "VAR_tileWidth",
      height_div: "VAR_tileHeight"
    },
    BUF_tileBuffer: {
      type: "buffer",
      width_div: "VAR_tileWidth",
      height_div: "VAR_tileHeight",
      format: "R32_UINT"
    }
  },
  // Render states are loose collections of properties (untyped) referenced in passes; they don't allocate objects themselves (it's only a description)
  // By convention, the name of a render state is prefixed by the type of object it applies to
  // (e.g. "SMP_" for sampler states, "DS_" for depth-stencil states, "RS_" for rasterizer states, "BLEND_" for blend states)
  render_states: {
    SMP_linear: {
      //type: "sampler_state",
      filter: "MIN_MAG_MIP_LINEAR",
      address_u: "WRAP",
      address_v: "WRAP",
      address_w: "WRAP"
    },
    SMP_point: {
      //type: "sampler_state",
      filter: "MIN_MAG_MIP_POINT",
      address_u: "WRAP",
      address_v: "WRAP",
      address_w: "WRAP"
    },
    DS_default: {
      //type: "depth_stencil_state",
      depth_enable: true,
      depth_write: true,
      depth_func: "LESS"
    }
  },
  // passes
  passes: [
    {
      id: "PBLIT_clear_tile_buffer",
      type: "blit",
      ops: [
        {
          op: "fill_buffer",
          buffer: "BUF_tileBuffer",
          value: 0
        }
      ]
    },
    {
      id: "PMESH_render_curves",
      type: "mesh",
      use_render_states: [
        "DSS_default"
      ],
      program: {
        combined_shader: "crates/fluff/shaders/curve_binning.glsl",
        defines: {
          "NUM_TILES_X": 16
        }
      },
      color_outputs: [
        {
          ref: "RT_tileLineCount",
          clear_uint: [
            0,
            0,
            0,
            0
          ]
        }
      ],
    }
  ],
}
